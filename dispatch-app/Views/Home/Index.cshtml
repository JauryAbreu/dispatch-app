@using dispatch_app.Models.Home
@model MainData
@{
    ViewData["Title"] = "DashBoard";
    string userId = Model.UserId;
}

<div class="row">
    <div class="col-lg-8 d-flex align-items-strech">
        <div class="card w-100">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between mb-1">
                    <div class="">
                        <h5 class="card-title fw-semibold">Ordenes Despachadas</h5>
                    </div>
                </div>
                <div class="card flex-fill w-100 draggable">
                    <div class="card-body py-3">
                        <div class="chart chart-sm">
                            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                            <canvas id="chartjs-dashboard-line" style="display: block; height: 252px; width: 428px;" width="856" height="504" class="chart-line chartjs-render-monitor"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="row">
            <div class="col-lg-12 col-sm-6">
                <!-- Yearly Breakup -->
                <div class="card overflow-hidden">
                    <div class="card-body p-4">
                        <h5 class="card-title mb-10 fw-semibold">Ordenes Despachadas (30 días)</h5>
                        <div class="row align-items-center">
                            <div class="col-7">
                                <h4 class="fw-semibold mb-3">@Model.OrderLast30Days</h4>
                            </div>
                            <div class="col-5">
                                <div class="d-flex justify-content-center">
                                    <div id="grade"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 col-sm-6">
                <!-- Yearly Breakup -->
                <div class="card overflow-hidden">
                    <div class="card-body p-4">
                        <h5 class="card-title mb-10 fw-semibold">Ordenes Despachadas (7 dias)</h5>
                        <div class="row align-items-center">
                            <div class="col-7">
                                <h4 class="fw-semibold mb-3">@Model.OrderLast7Days</h4>
                            </div>
                            <div class="col-5">
                                <div class="d-flex justify-content-center">
                                    <div id="grade"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 col-sm-6">
                <!-- Yearly Breakup -->
                <div class="card overflow-hidden">
                    <div class="card-body p-4">
                        <h5 class="card-title mb-10 fw-semibold">Ordenes Despachadas (Hoy)</h5>
                        <div class="row align-items-center">
                            <div class="col-7">
                                <h4 class="fw-semibold mb-3">@Model.OrderLast1Days</h4>
                            </div>
                            <div class="col-5">
                                <div class="d-flex justify-content-center">
                                    <div id="grade"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-4 d-flex align-items-stretch">
        <div class="card w-100">
            <div class="card-body p-4">
                <div class="mb-4">
                    <h5 class="card-title fw-semibold">Tiempo de Despacho</h5>
                </div>
                <ul class="timeline-widget mb-0 position-relative mb-n5">
                    @foreach (var item in Model.TimeToDispatcheds)
                    {
                        <li class="timeline-item d-flex position-relative overflow-hidden">
                            <div class="timeline-time text-dark flex-shrink-0 text-end">@item.Date</div>
                            <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                <span class="timeline-badge border-2 border border-primary flex-shrink-0 my-2"></span>
                                <span class="timeline-badge-border d-block flex-shrink-0"></span>
                            </div>
                            <div class="timeline-desc fs-3 text-dark mt-n1">@item.Description</div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    
    <div class="col-lg-8 d-flex align-items-stretch">
        <div class="card w-100">
            <div class="card-body p-4">
                <div class="d-flex mb-4 justify-content-between align-items-center">
                    <h5 class="mb-0 fw-bold">Ultimos 10 Despachos</h5>
                </div>

                <div class="table-responsive">
                    <table class="table table-borderless align-middle text-nowrap">
                        <thead>
                            <tr>
                                <th scope="col">Recibo</th>
                                <th scope="col">Fecha</th>
                                <th scope="col">Cantidad</th>
                                <th scope="col">Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.TransactionModels)
                            {
                                <tr>

                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div>
                                                <h6 class="mb-1 fw-bolder">@item.Customer</h6>
                                                <p class="fs-3 mb-0">@item.ReceiptId</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <p class="fs-3 fw-normal mb-0">@item.CreatedDate</p>
                                    </td>
                                    <td>
                                        <p class="fs-3 fw-normal mb-0">
                                            @item.Qty
                                        </p>
                                    </td>
                                    <td>
                                        @if (item.Status == "Completado")
                                        {
                                            <span class="badge bg-light-success rounded-pill text-success px-3 py-2 fs-3">Completado</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-light-warning rounded-pill text-warning px-3 py-2 fs-3">
                                                Pendiente
                                            </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var chartsLine = document.querySelectorAll(".chart-line");

        chartsLine.forEach(async function (chart) {
            if (!chart.getAttribute('data-chart-initialized')) {
                var ctx = chart.getContext("2d");

                // Crear gradiente
                var gradient = ctx.createLinearGradient(0, 0, 0, 225);
                gradient.addColorStop(0, "rgba(215, 227, 244, 1)");
                gradient.addColorStop(1, "rgba(215, 227, 244, 0)");

                // Obtener datos desde tu endpoint
                const response = await fetch("/Home/GetMainData?user="+ '@userId'); // ajusta la URL según corresponda
                const result = await response.json();
                const chartData = result.chartData || [];

                const labels = chartData.map(item => item.description); // fechas tipo "2025-06-15"
                const data = chartData.map(item => item.amount);

                new Chart(ctx, {
                    type: "line",
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "Órdenes por día",
                            fill: true,
                            backgroundColor: gradient,
                            borderColor: "#007bff",
                            data: data
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                mode: 'nearest',
                                intersect: false
                            },
                            filler: {
                                propagate: false
                            }
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: true
                        },
                        scales: {
                            x: {
                                reverse: true,
                                grid: {
                                    color: "rgba(0,0,0,0.0)"
                                }
                            },
                            y: {
                                ticks: {
                                    stepSize: 1 // puedes ajustar esto según los valores esperados
                                },
                                grid: {
                                    color: "rgba(0,0,0,0.0)",
                                    borderDash: [3, 3]
                                }
                            }
                        }
                    }
                });

                chart.setAttribute("data-chart-initialized", "true");
            }
        });
    });
</script>